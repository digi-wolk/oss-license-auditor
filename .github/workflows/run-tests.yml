name: tests

on:
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened, edited]
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
  schedule:
    # Once a day at 3:00AM UTC
    - cron: '0 3 * * *'

jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: checkout
        id: checkout
        uses: actions/checkout@v5
      - name: Download modules
        run: |
          go mod download
      - name: Run unit tests
        run: |
          go test ./... -v

  code-coverage:
    name: Run code coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: checkout
        id: checkout
        uses: actions/checkout@v5
      - name: Download modules
        run: |
          go mod download
      - name: Check code coverage above 70%
        run: |
          # Use the run-coverage.sh script which reads excluded packages from .codecov.yml
          ./scripts/run-coverage.sh
          go tool cover -func=coverage.out | \
            awk 'END{if ($3 < 70) {print "Code coverage is below 70%"; exit 1} else {print "Code coverage is acceptable"}}'
      - name: Run code coverage
        run: |
          go test -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out
          go tool cover -html=coverage.out -o coverage.html
      - name: Upload code coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: |
            coverage.html
          if-no-files-found: error
          retention-days: 7
